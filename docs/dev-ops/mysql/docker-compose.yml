name: dream
networks:
  app-network:  # 创建自定义网桥网络
    driver: bridge
services:
   mysql:
     image: mysql:8.0.32
     container_name: dream-mysql
     command:
       - --default-authentication-plugin=mysql_native_password
       - --character-set-server=utf8mb4
       - --collation-server=utf8mb4_unicode_ci
     restart: always
     environment:
       TZ: Asia/Shanghai
       MYSQL_ROOT_PASSWORD: mingqiyi
       MYSQL_DATABASE: dream_db
       MYSQL_USER: mmko
       MYSQL_PASSWORD: 123456
     ports:
       - "33307:3306"  # 对外暴露端口，供外部工具访问
     volumes:
       - mysql-data:/var/lib/d_mysql
       - ./sql:/docker-entrypoint-initdb.d
     networks:
       - app-network
     healthcheck:
       test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
       interval: 5s
       timeout: 10s
       retries: 10
       start_period: 15s
   phpmyadmin:
     image: phpmyadmin:5.2.1
     container_name: d_phpmyadmin
     hostname: phpmyadmin
     ports:
       - 8898:80
     environment:
       - PMA_HOST=mysql
       - PMA_PORT=3306
       - MYSQL_ROOT_PASSWORD=mingqiyi
     depends_on:
       mysql:
         condition: service_healthy
     networks:
       - app-network
  # Redis
   redis:
     image: redis:7.2.0
     container_name: redis-dream
     restart: always
     hostname: redis
     privileged: true
     ports:
       - 16379:6379
     volumes:
       - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
     command: redis-server /usr/local/etc/redis/redis.conf
     networks:
       - app-network
     healthcheck:
       test: [ "CMD", "redis-cli", "ping" ]
       interval: 10s
       timeout: 5s
       retries: 3

  # RedisAdmin https://github.com/joeferner/redis-commander
   redis-admin:
     image: docker.io/aoyanfei/redis-admin:latest  # 使用官方维护的镜像
     container_name: redis-admin
     hostname: reds-commander
     restart: always
     ports:
       - 8081:8081
     environment:
       - REDIS_HOSTS=local:redis:6379
       - HTTP_USER=admin
       - HTTP_PASSWORD=admin
     networks:
       - app-network
     depends_on:
       redis:
         condition: service_healthy
   portainer:
     image: portainer/portainer:latest
     container_name: portainer
     ports:
       - "9000:9000"
     volumes:
       - /app/portainer/data:/data
       - /var/run/docker.sock:/var/run/docker.sock
# 数据卷定义
volumes:
  mysql-data: